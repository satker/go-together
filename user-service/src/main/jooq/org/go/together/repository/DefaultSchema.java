/*
 * This file is generated by jOOQ.
 */
package org.go.together.repository;


import org.go.together.repository.tables.*;
import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;

import javax.annotation.processing.Generated;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.12.3"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class DefaultSchema extends SchemaImpl {

    /**
     * The reference instance of <code></code>
     */
    public static final DefaultSchema DEFAULT_SCHEMA = new DefaultSchema();
    private static final long serialVersionUID = -965013575;
    /**
     * The table <code>APPUSER</code>.
     */
    public final Appuser APPUSER = org.go.together.repository.tables.Appuser.APPUSER;

    /**
     * The table <code>APPUSER_INTEREST</code>.
     */
    public final AppuserInterest APPUSER_INTEREST = org.go.together.repository.tables.AppuserInterest.APPUSER_INTEREST;

    /**
     * The table <code>APPUSER_LANGUAGE</code>.
     */
    public final AppuserLanguage APPUSER_LANGUAGE = org.go.together.repository.tables.AppuserLanguage.APPUSER_LANGUAGE;

    /**
     * The table <code>INTEREST</code>.
     */
    public final Interest INTEREST = org.go.together.repository.tables.Interest.INTEREST;

    /**
     * The table <code>LANGUAGE</code>.
     */
    public final Language LANGUAGE = org.go.together.repository.tables.Language.LANGUAGE;

    /**
     * No further instances allowed
     */
    private DefaultSchema() {
        super("", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        List result = new ArrayList();
        result.addAll(getSequences0());
        return result;
    }

    private final List<Sequence<?>> getSequences0() {
        return Arrays.<Sequence<?>>asList(
                Sequences.HIBERNATE_SEQUENCE);
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
                Appuser.APPUSER,
                AppuserInterest.APPUSER_INTEREST,
                AppuserLanguage.APPUSER_LANGUAGE,
                Interest.INTEREST,
                Language.LANGUAGE);
    }
}

/*
 * This file is generated by jOOQ.
 */
package org.go.together.repository.tables;


import org.go.together.repository.DefaultSchema;
import org.go.together.repository.Indexes;
import org.go.together.repository.Keys;
import org.go.together.repository.tables.records.AppuserInterestRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.processing.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.12.3"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class AppuserInterest extends TableImpl<AppuserInterestRecord> {

    /**
     * The reference instance of <code>APPUSER_INTEREST</code>
     */
    public static final AppuserInterest APPUSER_INTEREST = new AppuserInterest();
    private static final long serialVersionUID = 726458644;
    /**
     * The column <code>APPUSER_INTEREST.APPUSER_ID</code>.
     */
    public final TableField<AppuserInterestRecord, String> APPUSER_ID = createField(DSL.name("APPUSER_ID"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");
    /**
     * The column <code>APPUSER_INTEREST.INTERESTS_ID</code>.
     */
    public final TableField<AppuserInterestRecord, String> INTERESTS_ID = createField(DSL.name("INTERESTS_ID"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * Create a <code>APPUSER_INTEREST</code> table reference
     */
    public AppuserInterest() {
        this(DSL.name("APPUSER_INTEREST"), null);
    }

    /**
     * Create an aliased <code>APPUSER_INTEREST</code> table reference
     */
    public AppuserInterest(String alias) {
        this(DSL.name(alias), APPUSER_INTEREST);
    }

    /**
     * Create an aliased <code>APPUSER_INTEREST</code> table reference
     */
    public AppuserInterest(Name alias) {
        this(alias, APPUSER_INTEREST);
    }

    private AppuserInterest(Name alias, Table<AppuserInterestRecord> aliased) {
        this(alias, aliased, null);
    }

    private AppuserInterest(Name alias, Table<AppuserInterestRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> AppuserInterest(Table<O> child, ForeignKey<O, AppuserInterestRecord> key) {
        super(child, key, APPUSER_INTEREST);
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AppuserInterestRecord> getRecordType() {
        return AppuserInterestRecord.class;
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FKAAHACQ6KG6FXN7DVR4DKTGR4V_INDEX_5, Indexes.FKI7C4EASMWHYS38SFYF7DB6V1L_INDEX_5, Indexes.PRIMARY_KEY_5);
    }

    @Override
    public UniqueKey<AppuserInterestRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_5;
    }

    @Override
    public List<UniqueKey<AppuserInterestRecord>> getKeys() {
        return Arrays.<UniqueKey<AppuserInterestRecord>>asList(Keys.CONSTRAINT_5);
    }

    @Override
    public List<ForeignKey<AppuserInterestRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AppuserInterestRecord, ?>>asList(Keys.FKAAHACQ6KG6FXN7DVR4DKTGR4V, Keys.FKI7C4EASMWHYS38SFYF7DB6V1L);
    }

    public Appuser appuser() {
        return new Appuser(this, Keys.FKAAHACQ6KG6FXN7DVR4DKTGR4V);
    }

    public Interest interest() {
        return new Interest(this, Keys.FKI7C4EASMWHYS38SFYF7DB6V1L);
    }

    @Override
    public AppuserInterest as(String alias) {
        return new AppuserInterest(DSL.name(alias), this);
    }

    @Override
    public AppuserInterest as(Name alias) {
        return new AppuserInterest(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AppuserInterest rename(String name) {
        return new AppuserInterest(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AppuserInterest rename(Name name) {
        return new AppuserInterest(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
